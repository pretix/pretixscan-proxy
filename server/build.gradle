plugins {
    id('application')
    id('org.jetbrains.kotlin.jvm')
    id('org.jetbrains.kotlin.kapt')
    id('com.github.johnrengelman.shadow') version '7.1.2'
    id('com.palantir.git-version') version '3.0.0'
    id('com.google.protobuf') version '0.9.4' apply false
}
apply from: '../libpretixsync-repo/libpretixsync/versions.gradle'

group 'eu.pretix.pretixscan'
version gitVersion()

repositories {
    mavenCentral()
}

dependencies {
    // Currently forced to 1.8.21 by Javalin
    // Should ideally match global Kotlin version
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.21"

    // Server dependencies
    implementation "io.javalin:javalin-bundle:5.6.3"
    implementation "org.slf4j:slf4j-simple:1.7.32"
    implementation "org.postgresql:postgresql:42.3.8"
    implementation 'net.harawata:appdirs:1.2.1'

    // libpretixsync dependencies
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_core_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_kotlin_version"
    implementation "net.i2p.crypto:eddsa:$eddsa_version"
    implementation "com.google.protobuf:protobuf-javalite:$protobuf_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "io.requery:requery:$requery_version"
    implementation "io.requery:requery-kotlin:$requery_version"
    implementation "joda-time:joda-time:$joda_version"
    implementation "org.json:json:$json_version"
    implementation "net.sourceforge.streamsupport:streamsupport-cfuture:$cfuture_version"
    kapt "io.requery:requery-processor:$requery_version"
    kapt "javax.annotation:jsr250-api:$jsr250_version"
    implementation(project(':libpretixsync')) {
        transitive = false
    }

    // Test dependencies
    testImplementation project(path: ':libpretixsync')
    testImplementation(testFixtures(project(':libpretixsync'))) {
        transitive = false
    }
    testImplementation "org.xerial:sqlite-jdbc:$sqlite_jdbc_version"
    testImplementation "junit:junit:$junit_version"
}

mainClassName = "eu.pretix.pretixscan.scanproxy.Server"

jar {
    dependsOn(':libpretixsync:jar')

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes "Main-Class": mainClassName
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileKotlin {
    kotlinOptions.jvmTarget = "11"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "11"
}
